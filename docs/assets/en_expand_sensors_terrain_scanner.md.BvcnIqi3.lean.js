import{E as i,a as n,b as o,c as a,I as t}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as p}from"./chunks/ElectricElement.BefNTKrd.js";import{d as f,B as m,c as x,o as g,j as r,a3 as s,G as c,a as h,k as v}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const b={id:"terrain-scanner",tabindex:"-1"},I=JSON.parse('{"title":"Terrain Scanner","description":"","frontmatter":{},"headers":[],"relativePath":"en/expand/sensors/terrain_scanner.md","filePath":"en/expand/sensors/terrain_scanner.md"}'),w={name:"en/expand/sensors/terrain_scanner.md"},B=f({...w,setup(T){let d=[new i(n.Top,o.Input,a.BitWidth,[new t(1,16,"Start Distance",`For each 1 increase of this, the start position moves one more block away from the scanner in the distance of the scanner faces. If the highest bit is 1, the direction changes to opposite.  
If this is 0xFFFF, this will not change the start distance, but change the scan method to the method like [Terrain Raycast Detector](terrain_raycast_detector), which can make a map.`),new t(17,17,"Whether Store Block Data","If this is 0, only store the contents of blocks, otherwise the values of blocks."),new t(18,32,"Empty","No effect.")]),new i(n.Right,o.Input,a.BitWidth,[new t(1,16,"Start Vertical Offset","For each 1 increase of this, the start position moves one more block in vertical direction. If the highest bit is 1, the direction changes to opposite. The positive direction is defined below."),new t(17,32,"Start Horizontal Offset","For each 1 increase of this, the start position moves one more block in horizontal direction. If the highest bit is 1, the direction changes to opposite. The positive direction is defined below.")]),new i(n.Bottom,o.Input,a.BitWidth,[new t(1,32,"Start","When it changes from 0 no not 0, the scanner will start scanning and store the result to the specified memory bank.")]),new i(n.Left,o.Input,a.BitWidth,[new t(1,16,"Vertical Scan Height","For each 1 increase of this, the end position moves one more block in vertical direction. The positive direction is defined below."),new t(17,32,"Horizontal Scan Width","For each 1 increase of this, the end position moves one more block in horizontal direction. The positive direction is defined below.")]),new i(n.In,o.Input,a.BitWidth,[new t(1,32,"Memory Bank ID","Specify a memory bank with the same ID to store result.")])];return(y,e)=>{const l=m("Badge");return g(),x("div",{"data-pagefind-body":!0},[r("h1",b,[e[0]||(e[0]=h("Terrain Scanner ")),c(l,{text:"v2.0"}),e[1]||(e[1]=h()),e[2]||(e[2]=r("a",{class:"header-anchor",href:"#terrain-scanner","aria-label":'Permalink to "Terrain Scanner <Badge text="v2.0"/>"'},"â€‹",-1))]),e[3]||(e[3]=s("",4)),c(p,{imgAltPrefix:"Terrain Scanner",connections:v(d),imgSrc:"/images/expand/sensors/GVTerrainScannerBlock.webp"},null,8,["connections"]),e[4]||(e[4]=s("",2))])}}});export{I as __pageData,B as default};
