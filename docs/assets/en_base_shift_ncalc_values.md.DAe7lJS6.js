import{_ as a,c as t,o as s,a3 as n}from"./chunks/framework.CM9Y3eBy.js";const u=JSON.parse('{"title":"Ncalc Values","description":"","frontmatter":{},"headers":[],"relativePath":"en/base/shift/ncalc/values.md","filePath":"en/base/shift/ncalc/values.md"}'),i={name:"en/base/shift/ncalc/values.md"};function o(l,e,r,c,p,d){return s(),t("div",{"data-pagefind-body":!0},e[0]||(e[0]=[n(`<h1 id="ncalc-values" tabindex="-1">Ncalc Values <a class="header-anchor" href="#ncalc-values" aria-label="Permalink to &quot;Ncalc Values&quot;">​</a></h1><blockquote><p>Excerpts from <a href="https://ncalc.github.io/ncalc/articles/values.html" target="_blank" rel="noreferrer">NCalc docs - Values</a></p></blockquote><p>A value is a terminal token representing a concrete element. This can be:</p><ul><li><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></li><li>Any floating point number, like <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noreferrer">double</a></li><li><a href="https://learn.microsoft.com/dotnet/api/system.datetime" target="_blank" rel="noreferrer">DateTime</a> or <a href="https://learn.microsoft.com/dotnet/api/system.timespan" target="_blank" rel="noreferrer">TimeSpan</a></li><li><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></li><li><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></li><li><a href="https://ncalc.github.io/ncalc/api/NCalc.Domain.Function.html" target="_blank" rel="noreferrer">Function</a></li><li><a href="https://ncalc.github.io/ncalc/api/NCalc.Domain.Identifier.html" target="_blank" rel="noreferrer">Identifier</a> (parameter)</li><li><a href="https://ncalc.github.io/ncalc/api/NCalc.Domain.LogicalExpressionList.html" target="_blank" rel="noreferrer">LogicalExpressionList</a> (List of other expressions)</li></ul><blockquote><p>Doc editor: The version of NCalc that Gigavolt uses, seems doesn&#39;t support <a href="https://learn.microsoft.com/dotnet/api/system.char" target="_blank" rel="noreferrer">char</a>.</p></blockquote><h2 id="integers" tabindex="-1">Integers <a class="header-anchor" href="#integers" aria-label="Permalink to &quot;Integers&quot;">​</a></h2><p>They are represented using numbers.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>123456</span></span></code></pre></div><p>They are evaluated as <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a>. If the value is too big, it will be evaluated as <a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a>.</p><h2 id="floating-point-numbers" tabindex="-1">Floating point numbers <a class="header-anchor" href="#floating-point-numbers" aria-label="Permalink to &quot;Floating point numbers&quot;">​</a></h2><p>Use the dot to define the decimal part.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>123.456</span></span>
<span class="line"><span>.123</span></span></code></pre></div><p>They are evaluated as <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noreferrer">double</a>.</p><h2 id="scientific-notation" tabindex="-1">Scientific notation <a class="header-anchor" href="#scientific-notation" aria-label="Permalink to &quot;Scientific notation&quot;">​</a></h2><p>You can use the<code>e</code>to define power of ten (10^).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.22e1</span></span>
<span class="line"><span>1e2</span></span>
<span class="line"><span>1e+2</span></span>
<span class="line"><span>1e+2</span></span>
<span class="line"><span>1e-2</span></span>
<span class="line"><span>.1e-2</span></span>
<span class="line"><span>1e10</span></span></code></pre></div><p>They are evaluated as <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noreferrer">double</a>.</p><h2 id="datetime" tabindex="-1">DateTime <a class="header-anchor" href="#datetime" aria-label="Permalink to &quot;DateTime&quot;">​</a></h2><p>Must be enclosed between sharps (<code>#</code>).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#2008/01/31#</span><span> // for en-US culture</span></span>
<span class="line"><span>#08/08/2001 09:30:00#</span></span></code></pre></div><p>NCalc uses the current <a href="https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo" target="_blank" rel="noreferrer">CultureInfo</a> to evaluate them.</p><h2 id="timespan" tabindex="-1">TimeSpan <a class="header-anchor" href="#timespan" aria-label="Permalink to &quot;TimeSpan&quot;">​</a></h2><p>Must be enclosed between sharps (<code>#</code>).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#20:42:00#</span></span></code></pre></div><h2 id="booleans" tabindex="-1">Booleans <a class="header-anchor" href="#booleans" aria-label="Permalink to &quot;Booleans&quot;">​</a></h2><p>Booleans can be either<code>true</code>or<code>false</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>true</span></span></code></pre></div><h2 id="strings" tabindex="-1">Strings <a class="header-anchor" href="#strings" aria-label="Permalink to &quot;Strings&quot;">​</a></h2><p>Any character between single or double quotes are evaluated as <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&#39;hello&#39;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>greeting(&quot;Chers&quot;)</span></span></code></pre></div><p>You can escape special characters using<code>\\</code>, like<code>\\\\</code>​<code>\\&#39;</code>​<code>\\n</code>​<code>\\r</code>​<code>\\t</code></p><h2 id="function" tabindex="-1">Function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;Function&quot;">​</a></h2><p>A function is made of a name followed by braces, containing optionally any value as arguments.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  Abs(1)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>doSomething(1, &#39;dummy&#39;)</span></span></code></pre></div><p>Please read the <a href="./functions.html">NCalc 函数</a> .</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>A parameter as a name, and can be optionally contained inside brackets or double quotes.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  2 + x, 2 + [x]</span></span></code></pre></div><blockquote><p>Doc editor：There are only four parameters,<code>i1</code>​<code>i2</code>​<code>i3</code>​<code>i4</code>, in Gigavolt Truth Table.</p></blockquote><h2 id="lists" tabindex="-1">Lists <a class="header-anchor" href="#lists" aria-label="Permalink to &quot;Lists&quot;">​</a></h2><p>Lists are collections of expressions enclosed in parentheses (<code>(</code>and<code>)</code>). They are the equivalent of <code>List&lt;LogicalExpression&gt;</code> at <a href="https://learn.microsoft.com/dotnet/standard/clr" target="_blank" rel="noreferrer">CLR</a>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(&#39;Chers&#39;, secretOperation(), 3.14)</span></span></code></pre></div>`,44)]))}const b=a(i,[["render",o]]);export{u as __pageData,b as default};
