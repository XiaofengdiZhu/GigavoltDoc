import{E as t,a,b as n,c as o,I as i,d}from"./chunks/ElectricElement.lXaUhYIG.js";import{d as h,o as p,c as _,j as e,a as r,I as s,k as f,a5 as m,D as u}from"./chunks/framework.C1yyT_1F.js";import"./chunks/locale.CWxpHeVA.js";const b={id:"声音发生器",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#声音发生器","aria-label":'Permalink to "声音发生器 <Badge text="v1.0" type="info"/>"'},"​",-1),w=e("h2",{id:"概述",tabindex:"-1"},[r("概述 "),e("a",{class:"header-anchor",href:"#概述","aria-label":'Permalink to "概述"'},"​")],-1),V=e("p",null,"可以从存储器加载 PCM 编码的音频数据并播放的元件",-1),k=e("h2",{id:"端口定义",tabindex:"-1"},[r("端口定义 "),e("a",{class:"header-anchor",href:"#端口定义","aria-label":'Permalink to "端口定义"'},"​")],-1),x=m('<h2 id="音频转换" tabindex="-1">音频转换 <a class="header-anchor" href="#音频转换" aria-label="Permalink to &quot;音频转换&quot;">​</a></h2><p>要使用声音发生器，首先需要使用 <a href="https://ffmpeg.org/" target="_blank" rel="noreferrer">ffmpeg</a> 或 <a href="http://www.pcgeshi.com/index.html" target="_blank" rel="noreferrer">格式工厂</a> 等软件将音频文件转换为满足以下条件的文件：</p><ul><li>文件格式：WAV</li><li>编码：PCM（如果没有该选项，一般默认就是PCM）</li><li>声道数：2</li><li>采样率：8000 ~ 48000 Hz</li><li>采样深度：16位</li></ul><p>再使用存储器的导入功能将该文件导入</p><div class="tip custom-block github-alert"><p class="custom-block-title">💡 进入存档时报错</p><p>进入存档时声音发生器会可能报错，这是因为其他端口的元件还未初始化，导致声音发生器收到 0V 的输入，或者是因为存储器还未初始化，导致读取存储器失败<br> 正确的解决方法是退出存档前，将后端输入电压置0V，在需要播放时再重新设置</p></div>',5),D=JSON.parse('{"title":"声音发生器","description":"","frontmatter":{},"headers":[],"relativePath":"zh/base/shift/sound_generator.md","filePath":"zh/base/shift/sound_generator.md"}'),I={name:"zh/base/shift/sound_generator.md"},y=h({...I,setup(P){let c=[new t(a.Top,n.Input,o.Hide,[new i(1,32,"播放开始位置",`设置从第 n 个 16 位数据开始播放，仅在读取音频数据时发生作用  
例如左端设为 44100 V，此端设为 88200 V，那么将从 88200/2/44100 = 1 秒处开始播放`)]),new t(a.Right,n.Input,o.Hide,[new i(1,32,"播放数量","设置播放 n 个 16 位数据，仅在读取音频数据时发生作用")]),new t(a.Bottom,n.Input,o.Hide,[new i(1,32,"启动/响度",`输入电压从 0V 上升后立即开始播放，输入 0V 停止，再上升后从头播放；电压越高，声音响度越大  
0V 时如果其他四端输入发生变化，将尝试重新从指定存储器读取音频数据；而非 0 V 时其他四端输入发生变化，将不发生任何作用`)]),new t(a.Left,n.Input,o.Hide,[new i(1,32,"采样率",`设置音频采样率，单位为 Hz，仅在读取音频数据时发生作用  
范围限制：8000 ~ 48000，对应十六进制：1F40 ~ BB80`)]),new t(a.In,n.Input,o.Hide,[new i(1,32,"存储器 ID","从指定 ID 的存储器读取音频数据，仅在读取音频数据时发生作用")])];return(B,C)=>{const l=u("Badge");return p(),_("div",{"data-pagefind-body":!0},[e("h1",b,[r("声音发生器 "),s(l,{text:"v1.0",type:"info"}),r(),g]),w,V,k,s(d,{imgAltPrefix:"十亿伏特声音发生器",connections:f(c),imgSrc:"/images/base/shift/GVSoundGeneratorBlock.webp"},null,8,["connections"]),x])}}});export{D as __pageData,y as default};
