import{E as n,a as l,b as r,c as a,I as e}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as g}from"./chunks/ElectricElement.BefNTKrd.js";import{d as y,B as p,c as m,o as b,j as d,a3 as s,G as i,a as o,k as f}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const _={id:"四维存储器",tabindex:"-1"},I=JSON.parse('{"title":"四维存储器","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/memory_banks/four_dimensional_memory_bank.md","filePath":"zh/expand/memory_banks/four_dimensional_memory_bank.md"}'),h={name:"zh/expand/memory_banks/four_dimensional_memory_bank.md"},B=y({...h,setup(u){let c=[new n(l.Top,r.Output,a.Hide,[new e(1,32,"输出数据/结果","")],!1,!0),new n(l.Right,r.Input,a.StartAndEnd,[new e(1,16,"W 坐标",""),new e(17,32,"Z 坐标","")],!1,!0),new n(l.Bottom,r.Input,a.Hide,[new e(1,32,"同步操作，详见下表","")],!1,!0),new n(l.Left,r.Input,a.StartAndEnd,[new e(1,16,"X 坐标",""),new e(17,32,"Y 坐标","")],!1,!0),new n(l.In,r.Input,a.Hide,[new e(1,32,"输入数据","")],!1,!0)];return(k,t)=>{const x=p("Badge");return b(),m("div",{"data-pagefind-body":!0},[d("h1",_,[t[0]||(t[0]=o("四维存储器 ")),i(x,{text:"v2.0"}),t[1]||(t[1]=o()),t[2]||(t[2]=d("a",{class:"header-anchor",href:"#四维存储器","aria-label":'Permalink to "四维存储器 <Badge text="v2.0"/>"'},"​",-1))]),t[3]||(t[3]=s('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>和 <a href="./../../base/shift/memory_bank.html">存储器</a> 相似，但从二维扩展到了四维。初始化时，必须先指定四个维度的范围</p><p>保存到存档的形式是一张张无损 <a href="https://developers.google.com/speed/webp" target="_blank" rel="noreferrer">WebP</a> 动图文件，每张图片存储一组三维数据，X 轴为图片宽度，Y 轴为图片高度，Z 轴为图片时间轴 导出的文件格式是<code>.GVFDMB</code>，其本质是 <a href="https://support.pkware.com/pkzip/appnote" target="_blank" rel="noreferrer">ZIP</a> 压缩文件，在该文件的 zip 注释中存储了每个维度的范围等信息，解压后是一张张名称是 Z 轴坐标的 <a href="https://developers.google.com/speed/webp" target="_blank" rel="noreferrer">WebP</a> 动图文件</p><div class="tip custom-block github-alert"><p class="custom-block-title">💡 提示</p><p>请尽量避免使用 W 和 Z 坐标，初始化时也尽可能设置较小的值，因为多维度的数据在保存等操作下性能较差，可能造成卡顿</p></div><blockquote><p>另有 <a href="./volatile_memory_banks.html#易失性四维存储器">易失版</a>，但仍需初始化</p></blockquote><h2 id="端口定义" tabindex="-1">端口定义 <a class="header-anchor" href="#端口定义" aria-label="Permalink to &quot;端口定义&quot;">​</a></h2>',6)),i(g,{imgAltPrefix:"四维存储器",connections:f(c),imgSrc:"/images/expand/memory_banks/GVFourDimensionalMemoryBankBlock.webp"},null,8,["connections"]),t[4]||(t[4]=s('<h2 id="下端同步操作" tabindex="-1">下端同步操作 <a class="header-anchor" href="#下端同步操作" aria-label="Permalink to &quot;下端同步操作&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">电压</th><th style="text-align:center;">操作</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">无</td><td style="text-align:center;">异步读</td><td style="text-align:left;">下端无输入时，上端实时输出指定位置的数据（超出范围时输出 0，下同）</td></tr><tr><td style="text-align:center;">0 或<br>未指定</td><td style="text-align:center;">无</td><td style="text-align:left;">下端输入 0 或以下未指定的电压时，均输出 0，且一旦下端接有元件或导线，该电路板将进入同步工作模式，该端输入变化时才会进行操作，输出不会随其他输入电压改变而立即发生改变</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">读取</td><td style="text-align:left;">读取指定位置的数据输出到上端</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">写入</td><td style="text-align:left;">将后端输入数据覆写到指定位置</td></tr><tr><td style="text-align:center;">256<br>(0x100)</td><td style="text-align:center;">设置宽</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时显示的宽度，默认为 0</td></tr><tr><td style="text-align:center;">257<br>(0x101)</td><td style="text-align:center;">设置高</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时显示的高度，默认为 0</td></tr><tr><td style="text-align:center;">258<br>(0x102)</td><td style="text-align:center;">设置 X 轴偏移</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时，忽略 X 坐标小于该偏移的数据，默认为 0</td></tr><tr><td style="text-align:center;">259<br>(0x103)</td><td style="text-align:center;">设置 Y 轴偏移</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时，忽略 Y 坐标小于该偏移的数据，默认为 0</td></tr><tr><td style="text-align:center;">260<br>(0x104)</td><td style="text-align:center;">设置 Z 坐标偏移</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时，要读取的 Z 坐标，默认为 0</td></tr><tr><td style="text-align:center;">26<br>(0x105)</td><td style="text-align:center;">设置 W 坐标偏移</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时，要读取的 W 坐标，默认为 0</td></tr><tr><td style="text-align:center;">272<br>(0x110)</td><td style="text-align:center;">获取宽</td><td style="text-align:left;">获取设置的宽，输出到上端</td></tr><tr><td style="text-align:center;">273<br>(0x111)</td><td style="text-align:center;">获取高</td><td style="text-align:left;">获取设置的高，输出到上端</td></tr><tr><td style="text-align:center;">274<br>(0x112)</td><td style="text-align:center;">获取 X 轴偏移</td><td style="text-align:left;">获取设置的 X 轴偏移，输出到上端</td></tr><tr><td style="text-align:center;">275<br>(0x113)</td><td style="text-align:center;">获取 Y 轴偏移</td><td style="text-align:left;">获取设置的 Y 轴偏移，输出到上端</td></tr><tr><td style="text-align:center;">276<br>(0x114)</td><td style="text-align:center;">获取 Z 坐标偏移</td><td style="text-align:left;">获取设置的 Z 轴偏移，输出到上端</td></tr><tr><td style="text-align:center;">277<br>(0x115)</td><td style="text-align:center;">获取 W 坐标偏移</td><td style="text-align:left;">获取设置的 W 轴偏移，输出到上端</td></tr></tbody></table>',2))])}}});export{I as __pageData,B as default};
