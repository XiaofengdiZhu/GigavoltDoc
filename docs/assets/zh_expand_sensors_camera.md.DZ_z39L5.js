import{_ as m}from"./chunks/GVCameraBlock0.ASC7OrOD.js";import{E as a,a as n,b as o,c as s,I as e}from"./chunks/ElectricConnectionTable.BnFVfk2b.js";import{E as u}from"./chunks/ElectricElement.ByEg-ig9.js";import{U as h}from"./chunks/UintColorConverter.N_y9fjbS.js";import{d as b,o as f,c as w,j as r,a as l,G as i,a3 as p,k as x,B as k}from"./chunks/framework.C-GLQy3h.js";import"./chunks/locale.DUWwBpDx.js";const g={id:"照相机",tabindex:"-1"},B={class:"details custom-block"},D=JSON.parse('{"title":"照相机","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/sensors/camera.md","filePath":"zh/expand/sensors/camera.md"}'),E={name:"zh/expand/sensors/camera.md"},S=b({...E,setup(v){let c=[new a(n.Top,o.Input,s.StartAndEnd,[new e(1,8,"视角角度","单位为角度"),new e(9,16,"空","无作用"),new e(17,32,"Y 轴位置偏移",`每加 1，拍照位置向上移动 1/8 格  
最高位为 1 时改为向下`)]),new a(n.Right,o.Input,s.StartAndEnd,[new e(1,16,"X 轴位置偏移",`每加 1，拍照位置向北移动 1/8 格  
最高位为 1 时改为向南`),new e(17,32,"Z 轴位置偏移",`每加 1，拍照位置向东移动 1/8 格  
最高位为 1 时改为向西`)]),new a(n.Bottom,o.Input,s.StartAndEnd,[new e(1,8,"偏航角","设置拍照的偏航角，即左右旋转，单位为角度"),new e(9,16,"俯仰角","设置拍照的偏航角，即上下旋转，单位为角度"),new e(17,24,"翻滚角","设置拍照的翻滚角，即以面向的方向为轴旋转，单位为角度"),new e(25,25,"偏航角的符号","为 1 时，`偏航角`反向旋转"),new e(26,26,"俯仰角的符号","为 1 时，`俯仰角`反向旋转"),new e(27,27,"翻滚角的符号","为 1 时，`翻滚角`反向旋转"),new e(28,32,"空","无作用")]),new a(n.Left,o.Input,s.BitWidth,[new e(1,16,"照片的高度","建议不超过 8192 (0x2000)"),new e(17,32,"照片的宽度","建议不超过 8192 (0x2000)")]),new a(n.In,o.Input,s.BitWidth,[new e(1,32,"存储器 ID","将图像输出到指定 ID 的存储器。像素按 ABGR 颜色模式转换为数据。")])];return(I,t)=>{const d=k("Badge");return f(),w("div",{"data-pagefind-body":!0},[r("h1",g,[t[0]||(t[0]=l("照相机 ")),i(d,{text:"v2.0"}),t[1]||(t[1]=l()),t[2]||(t[2]=r("a",{class:"header-anchor",href:"#照相机","aria-label":'Permalink to "照相机 <Badge text="v2.0"/>"'},"​",-1))]),t[4]||(t[4]=p('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>用于拍照，分为以下两个版本</p><h2 id="简单照相机" tabindex="-1">简单照相机 <a class="header-anchor" href="#简单照相机" aria-label="Permalink to &quot;简单照相机&quot;">​</a></h2><img alt="简单照相机 图示" src="'+m+'" class="center_image small"><p>输入指定的存储器 ID，每次输入发生变化就会对着面对的方向拍照，视角为 90 度，分辨率为 512×512，并把图像保存到指定的存储器中</p><blockquote><p>各端口的输入会按或计算后作为最终输入</p></blockquote><h2 id="复杂照相机" tabindex="-1">复杂照相机 <a class="header-anchor" href="#复杂照相机" aria-label="Permalink to &quot;复杂照相机&quot;">​</a></h2><p>可以控制拍照的各项参数，详见下面接口定义</p><h3 id="端口定义" tabindex="-1">端口定义 <a class="header-anchor" href="#端口定义" aria-label="Permalink to &quot;端口定义&quot;">​</a></h3>',9)),i(u,{imgAltPrefix:"复杂照相机",connections:x(c),imgSrc:"/images/expand/sensors/GVCameraBlock1.webp",titleLevel:4},null,8,["connections"]),t[5]||(t[5]=p('<div class="info custom-block github-alert"><p class="custom-block-title">💡 提示</p><p>各方向的偏移范围为 ±4095.875 格</p></div><div class="tip custom-block github-alert"><p class="custom-block-title">📝 ABGR 颜色模式</p><p>从高位到低位，每 8 位分别为颜色的 <span style="opacity:0.6;">Alpha 透明度通道</span>、<span style="color:blue;">Blue 蓝色通道</span>、<span style="color:green;">Green 绿色通道</span>、<span style="color:red;">Red 红色通道</span>，可使用下面的电压颜色转换器来转换</p></div>',2)),r("details",B,[t[3]||(t[3]=r("summary",null,"🛠️ 电压颜色转换器",-1)),i(h)])])}}});export{D as __pageData,S as default};
