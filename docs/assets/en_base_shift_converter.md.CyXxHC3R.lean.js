import{_ as e,a,b as r,c as d}from"./chunks/GVDigitalToAnalogConverterBlock8-32.BgR7hBMA.js";import{_ as u,o as m,c,j as l,a as t,G as p,n as o,B as g}from"./chunks/framework.C-GLQy3h.js";const b="_td_center_1tz6d_2",h="_img_width_100_1tz6d_5",f={td_center:b,img_width_100:h},D=JSON.parse('{"title":"D/A & A/D Converter","description":"","frontmatter":{},"headers":[],"relativePath":"en/base/shift/converter.md","filePath":"en/base/shift/converter.md"}'),v={name:"en/base/shift/converter.md"},C={id:"d-a-a-d-converter",tabindex:"-1"};function y(s,n,T,x,w,V){const i=g("Badge");return m(),c("div",{"data-pagefind-body":!0},[l("h1",C,[n[0]||(n[0]=t("D/A & A/D Converter ")),p(i,{text:"v1.0",type:"info"}),n[1]||(n[1]=t()),n[2]||(n[2]=l("a",{class:"header-anchor",href:"#d-a-a-d-converter","aria-label":'Permalink to "D/A & A/D Converter <Badge text="v1.0" type="info"/>"'},"​",-1))]),n[7]||(n[7]=l("h2",{id:"digital-to-analog-converter",tabindex:"-1"},[t("Digital to Analog Converter "),l("a",{class:"header-anchor",href:"#digital-to-analog-converter","aria-label":'Permalink to "Digital to Analog Converter"'},"​")],-1)),n[8]||(n[8]=l("p",null,"Changed to 4 combiners：",-1)),l("table",{class:o(s.$style.img_width_100)},n[3]||(n[3]=[l("tbody",null,[l("tr",null,[l("td",null,[t("GV Combine"),l("br"),t("1 to 4 Converter")]),l("td",null,[t("GV Combine"),l("br"),t("2 to 8 Converter")]),l("td",null,[t("GV Combine"),l("br"),t("4 to 16 Converter")]),l("td",null,[t("GV Combine"),l("br"),t("8 to 32 Converter")])]),l("tr",null,[l("td",null,[l("img",{src:e,alt:"The image of GV Combine 1 to 4 Converter"})]),l("td",null,[l("img",{src:a,alt:"The image of GV Combine 2 to 8 Converter"})]),l("td",null,[l("img",{src:r,alt:"The image of GV Combine 4 to 16 Converter"})]),l("td",null,[l("img",{src:d,alt:"The image of GV Combine 8 to 32 Converter"})])])],-1)]),2),n[9]||(n[9]=t(" The converter takes the lowest n bits of each input, and combines them in order, finally outputs the result at the back. For example: ")),l("table",{class:o(s.$style.td_center)},n[4]||(n[4]=[l("thead",null,[l("tr",null,[l("th",null,"Direction"),l("th",null,"Base"),l("th",null,"Left"),l("th",null,"Bottom"),l("th",null,"Right"),l("th",null,"Top")])],-1),l("tbody",null,[l("tr",null,[l("td",null,"Input Voltage"),l("td",null,"Hex"),l("td",{class:"mono"},"0x44444444"),l("td",{class:"mono"},"0x33333333"),l("td",{class:"mono"},"0x22222222"),l("td",{class:"mono"},"0x11111111")]),l("tr",null,[l("td",null,"The Lowest 1 Bit"),l("td",null,"Bin"),l("td",{class:"mono gray"},"0"),l("td",{class:"mono blue"},"1"),l("td",{class:"mono green"},"0"),l("td",{class:"mono red"},"1")]),l("tr",null,[l("td",{rowspan:"2"},"The Result of Combine 1 to 4"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"0"),l("span",{class:"blue"},"1"),l("span",{class:"green"},"0"),l("span",{class:"red"},"1")])]),l("tr",null,[l("td",null,"Hex"),l("td",{colspan:"4",class:"mono"},"0x5")]),l("tr",null,[l("td",null,"The Lowest 2 Bits"),l("td",null,"Bin"),l("td",{class:"mono gray"},"00"),l("td",{class:"mono blue"},"11"),l("td",{class:"mono green"},"10"),l("td",{class:"mono red"},"01")]),l("tr",null,[l("td",{rowspan:"2"},"The Result of Combine 2 to 8"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"00"),l("span",{class:"blue"},"11"),t(),l("span",{class:"green"},"10"),l("span",{class:"red"},"01")])]),l("tr",null,[l("td",null,"Hex"),l("td",{colspan:"4",class:"mono"},"0x39")]),l("tr",null,[l("td",null,"The Lowest 4 Bits"),l("td",null,"Bin"),l("td",{class:"mono gray"},"0100"),l("td",{class:"mono blue"},"0011"),l("td",{class:"mono green"},"0010"),l("td",{class:"mono red"},"0001")]),l("tr",null,[l("td",{rowspan:"2"},"The Result of Combine 4 to 16"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"0100"),t(),l("span",{class:"blue"},"0011"),t(),l("span",{class:"green"},"0010"),t(),l("span",{class:"red"},"0001")])]),l("tr",null,[l("td",null,"Hex"),l("td",{colspan:"4",class:"mono"},"0x4321")]),l("tr",null,[l("td",null,"The Lowest 8 Bits"),l("td",null,"Bin"),l("td",{class:"mono gray"},"0100 0100"),l("td",{class:"mono blue"},"0011 0011"),l("td",{class:"mono green"},"0010 0010"),l("td",{class:"mono red"},"0001 0001")]),l("tr",null,[l("td",{rowspan:"2",style:{"border-bottom-left-radius":"8px"}},"The Result of Combine 8 to 32"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"0100 0100"),t(),l("span",{class:"blue"},"0011 0011"),t(),l("span",{class:"green"},"0010 0010"),t(),l("span",{class:"red"},"0001 0001")])]),l("tr",null,[l("td",{style:{"border-radius":"0"}},"Hex"),l("td",{colspan:"4",class:"mono"},"0x44332211")])],-1)]),2),n[10]||(n[10]=l("h2",{id:"analog-to-digital-converter",tabindex:"-1"},[t("Analog to Digital Converter "),l("a",{class:"header-anchor",href:"#analog-to-digital-converter","aria-label":'Permalink to "Analog to Digital Converter"'},"​")],-1)),n[11]||(n[11]=l("p",null,"In the same way, changed to 4 splitters:",-1)),l("table",{class:o(s.$style.img_width_100)},n[5]||(n[5]=[l("tbody",null,[l("tr",null,[l("td",null,[t("GV Split 4 to"),l("br"),t(" 1 Converter")]),l("td",null,[t("GV Split 8 to"),l("br"),t(" 2 Converter")]),l("td",null,[t("GV Split 16 to"),l("br"),t(" 4 Converter")]),l("td",null,[t("GV Split 32 to"),l("br"),t(" 8 Converter")])]),l("tr",null,[l("td",null,[l("img",{src:e,alt:"The image of GV Split 4 to 1 Converter"})]),l("td",null,[l("img",{src:a,alt:"The image of GV Split 8 to 2 Converter"})]),l("td",null,[l("img",{src:r,alt:"The image of GV Split 16 to 4 Converter"})]),l("td",null,[l("img",{src:d,alt:"The image of GV Split 32 to 8 Converter"})])])],-1)]),2),n[12]||(n[12]=l("p",null,"Before splitting, the converter takes the lowest n bits of each input, and outputs the split result in order. For example, if the back input is 0x12345678 V:",-1)),l("table",{class:o(s.$style.td_center)},n[6]||(n[6]=[l("thead",null,[l("tr",null,[l("th",null,"Direction"),l("th",null,"Base"),l("th",null,"Left"),l("th",null,"Bottom"),l("th",null,"Right"),l("th",null,"Top")])],-1),l("tbody",null,[l("tr",null,[l("td",null,"Whole 32 bits"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"0001 0010"),t(),l("span",{class:"blue"},"0011 0100"),t(),l("span",{class:"green"},"0101 0110"),t(),l("span",{class:"red"},"0111 1000")])]),l("tr",null,[l("td",{rowspan:"2"},"The Result of Split 32 to 8"),l("td",null,"Bin"),l("td",{class:"mono gray"},"0001 0010"),l("td",{class:"mono blue"},"0011 0100"),l("td",{class:"mono green"},"0101 0110"),l("td",{class:"mono red"},"0111 1000")]),l("tr",null,[l("td",null,"Hex"),l("td",{class:"mono gray"},"12"),l("td",{class:"mono blue"},"34"),l("td",{class:"mono green"},"56"),l("td",{class:"mono red"},"78")]),l("tr",null,[l("td",null,"The Lowest 16 bits"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"0101"),t(),l("span",{class:"blue"},"0110"),t(),l("span",{class:"green"},"0111"),t(),l("span",{class:"red"},"1000")])]),l("tr",null,[l("td",{rowspan:"2"},"The Result of Split 16 to 4"),l("td",null,"Bin"),l("td",{class:"mono gray"},"0101"),l("td",{class:"mono blue"},"0110"),l("td",{class:"mono green"},"0111"),l("td",{class:"mono red"},"1000")]),l("tr",null,[l("td",null,"Hex"),l("td",{class:"mono gray"},"5"),l("td",{class:"mono blue"},"6"),l("td",{class:"mono green"},"7"),l("td",{class:"mono red"},"8")]),l("tr",null,[l("td",null,"The Lowest 8 bits"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"01"),l("span",{class:"blue"},"11"),t(),l("span",{class:"green"},"10"),l("span",{class:"red"},"00")])]),l("tr",null,[l("td",{rowspan:"2"},"The Result of Split 8 to 2"),l("td",null,"Bin"),l("td",{class:"mono gray"},"01"),l("td",{class:"mono blue"},"11"),l("td",{class:"mono green"},"10"),l("td",{class:"mono red"},"00")]),l("tr",null,[l("td",null,"Hex"),l("td",{class:"mono gray"},"1"),l("td",{class:"mono blue"},"3"),l("td",{class:"mono green"},"2"),l("td",{class:"mono red"},"0")]),l("tr",null,[l("td",null,"The Lowest 4 bits"),l("td",null,"Bin"),l("td",{colspan:"4",class:"mono"},[l("span",{class:"gray"},"1"),l("span",{class:"blue"},"0"),l("span",{class:"green"},"0"),l("span",{class:"red"},"0")])]),l("tr",null,[l("td",null,"The Result of Split 4 to 1"),l("td",null,"Bin"),l("td",{class:"mono gray"},"1"),l("td",{class:"mono blue"},"0"),l("td",{class:"mono green"},"0"),l("td",{class:"mono red"},"0")])],-1)]),2)])}const B={$style:f},S=u(v,[["render",y],["__cssModules",B]]);export{D as __pageData,S as default};
