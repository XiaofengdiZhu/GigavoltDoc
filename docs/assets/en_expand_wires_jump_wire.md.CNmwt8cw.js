import{_ as b}from"./chunks/GVJumpWireBlock.BVeb7Xe_.js";import{E as i,a as n,b as r,c as o,I as a}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as x}from"./chunks/ElectricElement.BefNTKrd.js";import{d as W,v,B as y,c,o as g,j as t,G as w,a as m,k as J}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const B={id:"jump-wire",tabindex:"-1"},k={id:"lineContainer",style:{position:"fixed",top:"0",left:"0",width:"100%",height:"100%","z-index":"-1"}},O=JSON.parse('{"title":"Jump Wire","description":"","frontmatter":{},"headers":[],"relativePath":"en/expand/wires/jump_wire.md","filePath":"en/expand/wires/jump_wire.md"}'),E={name:"en/expand/wires/jump_wire.md"},_=W({...E,setup(I){let f=[new i(n.Top,r.Output,o.Hide,[new a(1,32,"Output","According to left and right input, the Jump Wire performs a bitwise OR operation between the bottom input of itself and the input of other Jump Wires, then output the result.")]),new i(n.Right,r.Input,o.Hide,[new a(1,32,"Whether Read Other Jump Wires","If this input is greater than 7 V, the Jump Wire will read the bottom input of other Jump Wire, whose tag is same and left input is greater than 7 V.")]),new i(n.Bottom,r.Input,o.Hide,[new a(1,32,"Bottom Input","/")]),new i(n.Left,r.Input,o.Hide,[new a(1,32,"Whether Allow Bottom Input","If this input is greater than 7 V, the Jump Wire will allow bottom input, and the bottom input can be read by other Jump Wires with the same tag.")]),new i(n.In,r.Input,o.Hide,[new a(1,32,"Tag","Set the tag of the Jump Wire. There are green lines between the jump wires with the same tag, indicating that they are connected to each other.")])];const u=()=>{let s=document.getElementsByClassName("no_hover");if(s.length===2){let e=s[0],h=s[1],l=e.getBoundingClientRect(),p=h.getBoundingClientRect(),d=document.getElementById("line");d.setAttribute("x1",l.left+l.width/2+"px"),d.setAttribute("y1",l.top+l.height/2+"px"),d.setAttribute("x2",p.left+p.width/2+"px"),d.setAttribute("y2",p.top+p.height/2+"px")}};return v(()=>{globalThis.addEventListener("resize",u),globalThis.addEventListener("scroll",u)}),(s,e)=>{const h=y("Badge");return g(),c("div",{"data-pagefind-body":!0},[t("h1",B,[e[0]||(e[0]=m("Jump Wire ")),w(h,{text:"v1.0",type:"info"}),e[1]||(e[1]=m()),e[2]||(e[2]=t("a",{class:"header-anchor",href:"#jump-wire","aria-label":'Permalink to "Jump Wire <Badge text="v1.0" type="info"/>"'},"​",-1))]),e[4]||(e[4]=t("h2",{id:"overview",tabindex:"-1"},[m("Overview "),t("a",{class:"header-anchor",href:"#overview","aria-label":'Permalink to "Overview"'},"​")],-1)),e[5]||(e[5]=t("p",null,"The Jump Wires with the same tag can read the bottom inputs of each other, which can be used to transmit signals wirelessly. The transmission delay is 1 electric cycle (0.01 seconds).",-1)),e[6]||(e[6]=t("p",null,"There are green lines between the jump wires with the same tag, indicating that they are connected to each other.",-1)),e[7]||(e[7]=t("h2",{id:"ports-definition",tabindex:"-1"},[m("Ports Definition "),t("a",{class:"header-anchor",href:"#ports-definition","aria-label":'Permalink to "Ports Definition"'},"​")],-1)),w(x,{imgAltPrefix:"Jump Wire",connections:J(f),imgSrc:"/images/expand/wires/GVJumpWireBlock.webp",gateMask:!0},null,8,["connections"]),e[8]||(e[8]=t("img",{class:"no_hover",alt:"Another Jump Wire",src:b,style:{width:"calc(20% - 16px)","min-width":"100px","margin-top":"16px","image-rendering":"pixelated","mask-image":"linear-gradient(2.3086rad, transparent 0% 17.5%, black 17.5% 100%), linear-gradient(-2.3086rad, transparent 0% 17.5%, black 17.5% 100%)","mask-composite":"intersect"}},null,-1)),(g(),c("svg",k,e[3]||(e[3]=[t("line",{id:"line",x1:"0",y1:"0",x2:"100",y2:"100",stroke:"lime","stroke-width":"1"},null,-1)])))])}}});export{O as __pageData,_ as default};
