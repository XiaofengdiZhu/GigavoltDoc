import{d as p,o as h,c as m,j as s,a as i,I as l,k as _,a5 as c,D as u,aF as b}from"./chunks/framework.CZYz2WcB.js";import{E as t,a,b as n,c as o,I as e,d as f}from"./chunks/ElectricElement.BuvPvndk.js";import{U as g}from"./chunks/UintColorConverter.CuD6zLjx.js";import"./chunks/locale.CB2Y0rC6.js";const w={id:"方块展示板",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#方块展示板","aria-label":'Permalink to "方块展示板 <Badge text="v1.0" type="info"/>"'},"​",-1),x=c('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>用于展示方块，分为以下两个版本</p><h2 id="简单方块展示板" tabindex="-1">简单方块展示板 <a class="header-anchor" href="#简单方块展示板" aria-label="Permalink to &quot;简单方块展示板&quot;">​</a></h2><img alt="简单方块展示板 图示" src="'+b+'" class="center_image small"><p>直接输入要展示的方块的完整 ID（含特殊值），就会在其面前悬浮显示相应的方块，如果有多个输入，则会将这些输入进行或计算，其他参数的决定方式如下：</p><ul><li><strong>旋转</strong>：根据展示板面对的方向和方块自身的<code>手持旋转角度</code>属性决定</li><li><strong>大小</strong>：根据方块自身的<code>手持缩放</code>属性决定</li><li><strong>亮度</strong>：根据环境亮度决定</li><li><strong>上色</strong>：纯白色，即不改变方块颜色</li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">💡 提示</p><p>可以通过 <a href="./../sensors/block_value_plate.html">方块值板</a>、<a href="./.html">地形射线探测器</a> 等方式获取方块的完整 ID</p></div><h2 id="复杂方块展示板" tabindex="-1">复杂方块展示板 <a class="header-anchor" href="#复杂方块展示板" aria-label="Permalink to &quot;复杂方块展示板&quot;">​</a></h2><p>可以控制展示的各项参数，详见下面接口定义</p><h3 id="端口定义" tabindex="-1">端口定义 <a class="header-anchor" href="#端口定义" aria-label="Permalink to &quot;端口定义&quot;">​</a></h3>',10),y=c('<div class="info custom-block github-alert"><p class="custom-block-title">💡 提示</p><p>各方向的偏移范围为 ±4095.875 格</p></div><div class="tip custom-block github-alert"><p class="custom-block-title">📝 ABGR 颜色模式</p><p>从高位到低位，每 8 位分别为颜色的 <span style="opacity:0.6;">Alpha 透明度通道</span>、<span style="color:blue;">Blue 蓝色通道</span>、<span style="color:green;">Green 绿色通道</span>、<span style="color:red;">Red 红色通道</span>，可使用下面的电压颜色转换器来转换</p></div>',2),v={class:"details custom-block"},I=s("summary",null,"🛠️ 电压颜色转换器",-1),N=JSON.parse('{"title":"方块展示板","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/leds/block_display_led.md","filePath":"zh/expand/leds/block_display_led.md"}'),B={name:"zh/expand/leds/block_display_led.md"},R=p({...B,setup(E){let r=[new t(a.Top,n.Input,o.StartAndEnd,[new e(1,16,"缩放大小","每加 1，显示大小增加 1/8 倍，最大 8191.875 倍"),new e(17,32,"Y 轴位置偏移","每加 1，显示向上移动 1/8 格，最高位为 1 时改为向下")]),new t(a.Right,n.Input,o.StartAndEnd,[new e(1,16,"X 轴位置偏移","每加 1，显示向北移动 1/8 格，最高位为 1 时改为向南"),new e(17,32,"Z 轴位置偏移","每加 1，显示向东移动 1/8 格，最高位为 1 时改为向西")]),new t(a.Bottom,n.Input,o.StartAndEnd,[new e(1,8,"偏航角","设置显示的偏航角，即左右旋转，单位为度"),new e(9,16,"俯仰角","设置显示的偏航角，即上下旋转，单位为度"),new e(17,24,"翻滚角","设置显示的翻滚角，即以面向的方向为轴旋转，单位为度"),new e(25,25,"偏航角的符号","为 1 时，`偏航角`反向旋转"),new e(26,26,"俯仰角的符号","为 1 时，`俯仰角`反向旋转"),new e(27,27,"翻滚角的符号","为 1 时，`翻滚角`反向旋转"),new e(28,28,"空","无作用"),new e(29,29,"是否残像",`为 0 时，其他参数变化会立即按照新参数显示方块  
为 1 时，其他参数变化会保留之前显示的方块，使其持续显示，直到此位变为 0，或退出存档`),new e(30,32,"空","无作用")]),new t(a.Left,n.Input,o.BitWidth,[new e(1,32,"上色","设置要给方块上的颜色，ABGR 颜色模式")]),new t(a.In,n.Input,o.BitWidth,[new e(1,32,"方块完整 ID","设置要展示的方块的完整 ID（含特殊值）")])];return(P,q)=>{const d=u("Badge");return h(),m("div",{"data-pagefind-body":!0},[s("h1",w,[i("方块展示板 "),l(d,{text:"v1.0",type:"info"}),i(),k]),x,l(f,{imgAltPrefix:"复杂方块展示板",connections:_(r),imgSrc:"/images/expand/leds/block_display_led_1.webp",titleLevel:4},null,8,["connections"]),y,s("details",v,[I,l(g)])])}}});export{N as __pageData,R as default};
