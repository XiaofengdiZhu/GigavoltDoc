import{E as e,a,b as n,c as d,I as t,d as o}from"./chunks/ElectricElement.CeoLiehS.js";import{o as c,c as s,I as h,k as l,a5 as r}from"./chunks/framework.IyV-bm8r.js";const _=r("",5),p=r("",2),w=JSON.parse('{"title":"地形扫描仪","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/sensors/terrain_scanner.md","filePath":"zh/expand/sensors/terrain_scanner.md"}'),u={name:"zh/expand/sensors/terrain_scanner.md"},x=Object.assign(u,{setup(m){let i=[new e(a.Top,n.Input,d.BitWidth,[new t(1,16,"起始距离","每加 1，扫描起始位置距离扫描仪面向的方向加 1 格，最高位为 1 时向背面；如果为 0xFFFF，则不调整起始距离，扫描方式改为像射线探测器那样，向面对方向不断扫描直到遇到非空气方块（可用于生成地图）"),new t(17,17,"是否存储方块特殊值","为 0 时只保存方块ID，为 1 时方块 ID 和数据一并保存"),new t(18,32,"空","无作用")]),new e(a.Right,n.Input,d.BitWidth,[new t(1,16,"起始纵向偏移","每加 1，扫描起始位置纵向偏移 1 格，最高位为 1 时取反方向，正方向的定义另见下表"),new t(17,32,"起始横向偏移","每加 1，扫描起始位置横向偏移 1 格，最高位为 1 时取反方向，正方向的定义另见下表")]),new e(a.Bottom,n.Input,d.BitWidth,[new t(1,32,"启动","从0变为非0时启动扫描并将结果保存到指定 ID 的存储器")]),new e(a.Left,n.Input,d.BitWidth,[new t(1,16,"纵向扫描高度","每加 1，扫描的高度加 1 格，扫描方向的定义另见下表"),new t(17,32,"横向扫描宽度","每加 1，扫描的宽度加 1 格，扫描方向的定义另见下表")]),new e(a.In,n.Input,d.BitWidth,[new t(1,32,"存储器 ID","指定要保存到的存储器的 ID")])];return(b,I)=>(c(),s("div",{"data-pagefind-body":!0,"data-pagefind-meta":"base64:JTdCJTIyZGF0ZSUyMiUzQTE3MjA3MTE2MjAwMDAlN0Q="},[_,h(o,{imgAltPrefix:"地形扫描仪",connections:l(i),imgSrc:"/images/expand/GVTerrainScanner.png"},null,8,["connections"]),p]))}});export{w as __pageData,x as default};
