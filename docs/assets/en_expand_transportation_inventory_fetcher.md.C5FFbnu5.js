import{_ as m}from"./chunks/GVInventoryFetcherBlock1.DY14-E2S.js";import{E as r,a as s,b as a,c as l,I as n}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as c}from"./chunks/ElectricElement.BefNTKrd.js";import{d as y,B as u,c as w,o as b,j as t,G as i,a as o,k as p}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const v={id:"inventory-fetcher",tabindex:"-1"},B=JSON.parse('{"title":"Inventory Fetcher","description":"","frontmatter":{"outline":2},"headers":[],"relativePath":"en/expand/transportation/inventory_fetcher.md","filePath":"en/expand/transportation/inventory_fetcher.md"}'),x={name:"en/expand/transportation/inventory_fetcher.md"},C=y({...x,setup(g){let h=[new r(s.All,a.Input,l.StartAndEnd,[new n(1,8,"","Specify slot"),new n(9,16,"","Specify count"),new n(17,17,"","If this is 1, the element will ignore specified count in operation, and will control as much as possible."),new n(18,18,"","If this is 1, the element will not dispense.")],!0)],f=[new r(s.All,a.Input,l.StartAndEnd,[new n(1,10,"","Specify block content."),new n(11,11,"","If this is 1, the element will also check the block data, otherwise not."),new n(12,12,"","If this is 1, the element will fetch all items meet the conditions, otherwise only the first one."),new n(13,13,"","If this is 1, the element will not dispense."),new n(14,14,"","No Effect"),new n(15,32,"","If the 11th bit is 1, specify the block data, otherwise no effect.")],!0)];return(I,e)=>{const d=u("Badge");return b(),w("div",{"data-pagefind-body":!0},[t("h1",v,[e[0]||(e[0]=o("Inventory Fetcher ")),i(d,{text:"v2.0"}),e[1]||(e[1]=o()),e[2]||(e[2]=t("a",{class:"header-anchor",href:"#inventory-fetcher","aria-label":'Permalink to "Inventory Fetcher <Badge text="v2.0"/>"'},"​",-1))]),e[3]||(e[3]=t("h2",{id:"overview",tabindex:"-1"},[o("Overview "),t("a",{class:"header-anchor",href:"#overview","aria-label":'Permalink to "Overview"'},"​")],-1)),e[4]||(e[4]=t("p",null,"You can use it to fetch items stored in the inventory of a block like a chest, furnace, and dispenser. When the input voltages change, it will try to fetch the items.",-1)),e[5]||(e[5]=t("blockquote",null,[t("p",null,"The final input is generated by performing a bitwise OR operation between the inputs from all ports.")],-1)),e[6]||(e[6]=t("p",null,"The shape of this element is T-shaped. The back of the horizontal line should connect to a chest (or a block can store items, same as below). If the front of the vertical line is another chest, the element will store the fetched items into it, otherwise the element will try to dispense the fetched items. You can place several extension poles or fetchers, whose vertical line are parallel, at any side to fetch or store items in farther chests.",-1)),e[7]||(e[7]=t("p",null,"It has two types:",-1)),e[8]||(e[8]=t("h2",{id:"specify-slot-type",tabindex:"-1"},[o("Specify Slot Type "),t("a",{class:"header-anchor",href:"#specify-slot-type","aria-label":'Permalink to "Specify Slot Type"'},"​")],-1)),i(c,{imgAltPrefix:"Inventory Fetcher - Specify Slot",connections:p(h),imgSrc:"/images/expand/transportation/GVInventoryFetcherBlock0.webp"},null,8,["connections"]),e[9]||(e[9]=t("h2",{id:"specify-content-type",tabindex:"-1"},[o("Specify Content Type "),t("a",{class:"header-anchor",href:"#specify-content-type","aria-label":'Permalink to "Specify Content Type"'},"​")],-1)),i(c,{imgAltPrefix:"Inventory Fetcher - Specify Content",connections:p(f),imgSrc:"/images/expand/transportation/GVInventoryFetcherBlock2.webp"},null,8,["connections"]),e[10]||(e[10]=t("h2",{id:"about-extension-pole",tabindex:"-1"},[o("About Extension Pole "),t("a",{class:"header-anchor",href:"#about-extension-pole","aria-label":'Permalink to "About Extension Pole"'},"​")],-1)),e[11]||(e[11]=t("img",{alt:"The Image of the Extension Pole",src:m,class:"center_image small"},null,-1)),e[12]||(e[12]=t("p",null,"For the inventory fetcher to be able to transport items to a farther place with no delay. It is bidirectional. But they cannot intersect each other at right angles.",-1))])}}});export{B as __pageData,C as default};
