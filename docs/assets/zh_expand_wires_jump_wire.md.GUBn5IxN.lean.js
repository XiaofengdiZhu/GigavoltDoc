import{d as w,y as f,o as _,c as u,j as e,a as c,I as g,k as b,b4 as k,D as y}from"./chunks/framework.CZYz2WcB.js";import{E as t,a as n,b as i,c as a,I as o,d as B}from"./chunks/ElectricElement.BuvPvndk.js";import"./chunks/locale.CB2Y0rC6.js";const E={id:"跳线",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#跳线","aria-label":'Permalink to "跳线 <Badge text="v1.0" type="info"/>"'},"​",-1),C=e("h2",{id:"概述",tabindex:"-1"},[c("概述 "),e("a",{class:"header-anchor",href:"#概述","aria-label":'Permalink to "概述"'},"​")],-1),I=e("p",null,"标签相同的跳线可以互相读取其下端输入，实现无线传输信号的效果，传输延迟为 1 个电路周期（0.01 秒）",-1),j=e("p",null,"标签相同的跳线之间会有绿色的指示线，代表它们互相连接",-1),P=e("h2",{id:"端口定义",tabindex:"-1"},[c("端口定义 "),e("a",{class:"header-anchor",href:"#端口定义","aria-label":'Permalink to "端口定义"'},"​")],-1),V=e("img",{class:"no_hover",alt:"另一个跳线",src:k,style:{width:"calc(20% - 16px)","min-width":"100px","margin-top":"16px","image-rendering":"pixelated","mask-image":"linear-gradient(2.3086rad, transparent 0% 17.5%, black 17.5% 100%), linear-gradient(-2.3086rad, transparent 0% 17.5%, black 17.5% 100%)","mask-composite":"intersect"}},null,-1),z={id:"lineContainer",style:{position:"fixed",top:"0",left:"0",width:"100%",height:"100%","z-index":"-1"}},A=e("line",{id:"line",x1:"0",y1:"0",x2:"100",y2:"100",stroke:"lime","stroke-width":"1"},null,-1),H=[A],M=JSON.parse('{"title":"跳线","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/wires/jump_wire.md","filePath":"zh/expand/wires/jump_wire.md"}'),N={name:"zh/expand/wires/jump_wire.md"},O=w({...N,setup(T){let x=[new t(n.Top,i.Output,a.Hide,[new o(1,32,"输出","根据左端和右端的电压，将下端输入和其他跳线的输入按或计算后，输出相应结果")]),new t(n.Right,i.Input,a.Hide,[new o(1,32,"是否读取其他跳线","大于 7 V 时，将会从标签相同的跳线读取其下端输入，但如果那个标签的左端小于 7 V，将无法读取")]),new t(n.Bottom,i.Input,a.Hide,[new o(1,32,"下端输入","/")]),new t(n.Left,i.Input,a.Hide,[new o(1,32,"是否允许下端输入","大于 7 V时，将允许下端输入，而且下端输入将能被标签相同的其他跳线读取")]),new t(n.In,i.Input,a.Hide,[new o(1,32,"标签","设置该跳线的标签，标签相同的跳线之间会有绿色指示线，代表它们互相连接")])];const h=()=>{let s=document.getElementsByClassName("no_hover");if(s.length===2){let m=s[0],p=s[1],r=m.getBoundingClientRect(),l=p.getBoundingClientRect(),d=document.getElementById("line");d.setAttribute("x1",r.left+r.width/2+"px"),d.setAttribute("y1",r.top+r.height/2+"px"),d.setAttribute("x2",l.left+l.width/2+"px"),d.setAttribute("y2",l.top+l.height/2+"px")}};return f(()=>{globalThis.addEventListener("resize",h),globalThis.addEventListener("scroll",h)}),(s,m)=>{const p=y("Badge");return _(),u("div",{"data-pagefind-body":!0},[e("h1",E,[c("跳线 "),g(p,{text:"v1.0",type:"info"}),c(),v]),C,I,j,P,g(B,{imgAltPrefix:"跳线",connections:b(x),imgSrc:"/images/expand/wires/GVJumpWireBlock.webp",gateMask:"true"},null,8,["connections"]),V,(_(),u("svg",z,H))])}}});export{M as __pageData,O as default};
