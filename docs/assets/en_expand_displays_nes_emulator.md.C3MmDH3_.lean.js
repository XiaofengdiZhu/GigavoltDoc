import{E as n,a as r,b as c,c as m,I as t}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as h}from"./chunks/ElectricElement.BefNTKrd.js";import{d,B as p,c as u,o as b,j as a,a3 as f,G as s,a as i,k}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const w={id:"nes-emulator",tabindex:"-1"},C=JSON.parse('{"title":"NES Emulator","description":"","frontmatter":{},"headers":[],"relativePath":"en/expand/displays/nes_emulator.md","filePath":"en/expand/displays/nes_emulator.md"}'),E={name:"en/expand/displays/nes_emulator.md"},O=d({...E,setup(y){let o=[new n(r.All,c.Input,m.StartAndEnd,[new t(1,1,"Power","If this is 0, the emulator will shut down, otherwise it will be turned on."),new t(2,2,"Reset","When this is 1, the emulator will reset itself."),new t(3,4,"Rotation","For each 1 increase of this, the screen of the emulator will rotate 90 degree clockwise."),new t(5,8,"Empty","No effect."),new t(9,16,"Controller 1","From the lowest bit to the highest bit：`→`&#8203;`←`&#8203;`↓`&#8203;`↑`&#8203;`Start`&#8203;`Select`&#8203;`B`&#8203;`A`"),new t(17,24,"Controller 2","No Effect，Because [XamariNES](https://github.com/enusbaum/XamariNES) does not support the second controller."),new t(25,31,"Scale","If this is 0 or 1, the screen of the emulator will be 1 block size. Then each 1 increase of this, the screen size of the emulator will increase 1 block."),new t(32,32,"Empty","No effect.")])];return(x,e)=>{const l=p("Badge");return b(),u("div",{"data-pagefind-body":!0},[a("h1",w,[e[0]||(e[0]=i("NES Emulator ")),s(l,{text:"v1.0",type:"info"}),e[1]||(e[1]=i()),e[2]||(e[2]=a("a",{class:"header-anchor",href:"#nes-emulator","aria-label":'Permalink to "NES Emulator <Badge text="v1.0" type="info"/>"'},"​",-1))]),e[3]||(e[3]=f("",8)),s(h,{imgAltPrefix:"Nes Emulator",connections:k(o),imgSrc:"/images/expand/displays/GVNesEmulatorBlock.webp"},null,8,["connections"])])}}});export{C as __pageData,O as default};
