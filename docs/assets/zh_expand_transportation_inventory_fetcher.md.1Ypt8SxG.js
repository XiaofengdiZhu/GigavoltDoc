import{d as _,o as m,c as u,j as t,a as n,I as a,k as o,a5 as f,aQ as x,D as b}from"./chunks/framework.CZYz2WcB.js";import{E as r,a as i,b as c,c as s,I as e,d as l}from"./chunks/ElectricElement.BuvPvndk.js";import"./chunks/locale.CB2Y0rC6.js";const w={id:"箱子提取器",tabindex:"-1"},g=t("a",{class:"header-anchor",href:"#箱子提取器","aria-label":'Permalink to "箱子提取器 <Badge text="v2.0"/>"'},"​",-1),k=f('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>箱子提取器可以从箱子、熔炉、发射器等可存储物品的方块中提取物品，它由电路来控制，每次电压变化都将尝试进行提取</p><blockquote><p>方块的各面输入会按或计算后执行</p></blockquote><p>它的形状是T字形，横线的一端<code>背面</code>摆放要取出物品的箱子，另一端<code>正面</code>分四种情况：</p><ul><li>如摆放箱子等可以存储物品的方块，则向其存入提取的物品</li><li>如摆放 <a href="#关于延长杆">延长杆</a>，物品将无延迟地在延长杆中运输，最终存入终点的另一个箱子等可以存储物品的方块，或丢出</li><li>如摆放另一个方向相反的提取器，而且该提取器的背面也摆放有箱子等可以存储物品的方块，则该提取器将被视为延长杆（这两个提取器之间可以插入更多延长杆）</li><li>非以上三种情况，提取器将尝试直接把物品丢出</li></ul><p>箱子提取器有以下两个版本，区别在于材质和端口定义</p><h2 id="指定槽位版" tabindex="-1">指定槽位版 <a class="header-anchor" href="#指定槽位版" aria-label="Permalink to &quot;指定槽位版&quot;">​</a></h2>',7),I=t("h2",{id:"指定-id-版",tabindex:"-1"},[n("指定 ID 版 "),t("a",{class:"header-anchor",href:"#指定-id-版","aria-label":'Permalink to "指定 ID 版"'},"​")],-1),v=t("h2",{id:"关于延长杆",tabindex:"-1"},[n("关于延长杆 "),t("a",{class:"header-anchor",href:"#关于延长杆","aria-label":'Permalink to "关于延长杆"'},"​")],-1),E=t("img",{alt:"延长杆 图示",src:x,class:"center_image small"},null,-1),P=t("p",null,"用于让提取器能够无延迟地远距离传送物品，而且它是双向导通的，但不能两两垂直相交",-1),V=JSON.parse('{"title":"箱子提取器","description":"","frontmatter":{"outline":2},"headers":[],"relativePath":"zh/expand/transportation/inventory_fetcher.md","filePath":"zh/expand/transportation/inventory_fetcher.md"}'),D={name:"zh/expand/transportation/inventory_fetcher.md"},N=_({...D,setup(y){let d=[new r(i.All,c.Input,s.StartAndEnd,[new e(1,8,"","指定要提取的槽位"),new e(9,16,"","指定数量"),new e(17,17,"","为 1 时忽略指定数量，直接提取该槽位全部的物品"),new e(18,18,"","为 1 时阻止物品被丢出")],!0)],h=[new r(i.All,c.Input,s.StartAndEnd,[new e(1,10,"","指定要提取的方块 ID"),new e(11,11,"","为 1 时同时判断方块的特殊值，否则不只判断方块 ID"),new e(12,12,"","为 1 时提取全部符合条件的物品，否则只提取 1 个"),new e(13,13,"","为 1 时阻止物品被丢出"),new e(14,14,"","无作用"),new e(15,32,"","指定要提取的方块的特殊值，前提是第 11 位为 1")],!0)];return(B,q)=>{const p=b("Badge");return m(),u("div",{"data-pagefind-body":!0},[t("h1",w,[n("箱子提取器 "),a(p,{text:"v2.0"}),n(),g]),k,a(l,{imgAltPrefix:"箱子提取器-指定槽位",connections:o(d),imgSrc:"/images/expand/transportation/GVInventoryFetcherBlock0.webp"},null,8,["connections"]),I,a(l,{imgAltPrefix:"箱子提取器-指定 ID",connections:o(h),imgSrc:"/images/expand/transportation/GVInventoryFetcherBlock2.webp"},null,8,["connections"]),v,E,P])}}});export{V as __pageData,N as default};
