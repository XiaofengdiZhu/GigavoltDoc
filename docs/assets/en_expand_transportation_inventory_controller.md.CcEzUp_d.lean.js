import{E as l,a as r,b as i,c as s,I as e}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as h}from"./chunks/ElectricElement.BefNTKrd.js";import{d as u,B as f,c as y,o as p,j as o,G as a,a3 as m,a as n,k as x}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const b={id:"inventory-controller",tabindex:"-1"},S=JSON.parse('{"title":"Inventory Controller","description":"","frontmatter":{},"headers":[],"relativePath":"en/expand/transportation/inventory_controller.md","filePath":"en/expand/transportation/inventory_controller.md"}'),g={name:"en/expand/transportation/inventory_controller.md"},C=u({...g,setup(w){let d=[new l(r.Top,i.Output,s.BitWidth,[new e(1,32,"Result","Because the result is often 0, the default result is 0xFFFFFFFF V. If there is an error occupied during controlling, the result will be 0xFFFFFFFF V too.")]),new l(r.Right,i.Input,s.StartAndEnd,[new e(1,8,"Slot","Specify the n+1th slot to control."),new e(9,16,"Count","Specify how many items to control."),new e(17,17,"Whether Check Block Data","See`Block Data`"),new e(18,18,"Whether Control All","If this is 1, the element will ignore`Count` in operation, and will control as much as possible."),new e(19,19,"Whether Control Player's Inventory","If this is 0, this element controls the inventory of the behind block. Otherwise, the element controls the specified player's inventory."),new e(20,24,"Player Index","Specify which number player's inventory you want to control when`Whether Control Player's Inventory`is 1."),new e(25,32,"New Slot","Specify the n+1th slot as the new slot when`Synchronous Operations`is 16(0x10).")]),new l(r.Bottom,i.Input,s.BitWidth,[new e(1,32,"Synchronous Operations","Details are in the table below.")]),new l(r.Left,i.Input,s.StartAndEnd,[new e(1,10,"Block Content","If this is greater than 0, the element will only control the item with the same block content."),new e(11,14,"Empty","No effect."),new e(15,32,"Block Data","If`Block Content`is greater than 0 and`Whether Check Block Data`is 1, the element will also check whether the block data of items equals to this.")])];return(v,t)=>{const c=f("Badge");return p(),y("div",{"data-pagefind-body":!0},[o("h1",b,[t[0]||(t[0]=n("Inventory Controller ")),a(c,{text:"v2.0"}),t[1]||(t[1]=n()),t[2]||(t[2]=o("a",{class:"header-anchor",href:"#inventory-controller","aria-label":'Permalink to "Inventory Controller <Badge text="v2.0"/>"'},"​",-1))]),t[3]||(t[3]=o("h2",{id:"overview",tabindex:"-1"},[n("Overview "),o("a",{class:"header-anchor",href:"#overview","aria-label":'Permalink to "Overview"'},"​")],-1)),t[4]||(t[4]=o("p",null,[n("You can use it to control items stored in the inventory of a block like a chest, furnace, and dispenser, or a player's inventory."),o("br"),n(" And you can place several extension poles or fetchers, whose vertical lines are parallel, at back to control items in farther chests.")],-1)),t[5]||(t[5]=o("h2",{id:"ports-definition",tabindex:"-1"},[n("Ports Definition "),o("a",{class:"header-anchor",href:"#ports-definition","aria-label":'Permalink to "Ports Definition"'},"​")],-1)),a(h,{imgAltPrefix:"Inventory Controller",connections:x(d),imgSrc:"/images/expand/transportation/GVInventoryControllerBlock.webp"},null,8,["connections"]),t[6]||(t[6]=m("",2))])}}});export{S as __pageData,C as default};
