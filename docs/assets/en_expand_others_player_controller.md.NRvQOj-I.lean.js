import{E as r,a as l,b as a,c as i,I as n}from"./chunks/ElectricConnectionTable.BnFVfk2b.js";import{E as y}from"./chunks/ElectricElement.ByEg-ig9.js";import{d as g,o as p,c as x,j as e,a as o,G as d,k as h,a3 as u,B as f}from"./chunks/framework.C-GLQy3h.js";import"./chunks/locale.DUWwBpDx.js";const m={id:"player-controller",tabindex:"-1"},O=JSON.parse('{"title":"Player Controller","description":"","frontmatter":{},"headers":[],"relativePath":"en/expand/others/player_controller.md","filePath":"en/expand/others/player_controller.md"}'),b={name:"en/expand/others/player_controller.md"},E=g({...b,setup(I){let s=[new r(l.Top,a.Input,i.Hide,[new n(1,32,"Input Parameter","")],!1,!0),new r(l.Right,a.Input,i.Hide,[new n(1,32,"Input Parameter","")],!1,!0),new r(l.Bottom,a.Input,i.BitWidth,[new n(1,16,"Synchronous Operations, details are in the table below.",""),new n(1,16,"Player Index","")],!1,!0),new r(l.Left,a.Input,i.Hide,[new n(1,32,"Input Parameter","")],!1,!0),new r(l.In,a.Input,i.StartAndEnd,[new n(1,1,"Intercept Right Input",""),new n(2,2,"Intercept Top Input",""),new n(3,3,"Intercept Left Input","")],!1,!0)];return(w,t)=>{const c=f("Badge");return p(),x("div",{"data-pagefind-body":!0},[e("h1",m,[t[0]||(t[0]=o("Player Controller ")),d(c,{text:"v2.0"}),t[1]||(t[1]=o()),t[2]||(t[2]=e("a",{class:"header-anchor",href:"#player-controller","aria-label":'Permalink to "Player Controller <Badge text="v2.0"/>"'},"‚Äã",-1))]),t[3]||(t[3]=e("h2",{id:"overview",tabindex:"-1"},[o("Overview "),e("a",{class:"header-anchor",href:"#overview","aria-label":'Permalink to "Overview"'},"‚Äã")],-1)),t[4]||(t[4]=e("p",null,"For controlling various information of a player.",-1)),t[5]||(t[5]=e("h2",{id:"ports-definition",tabindex:"-1"},[o("Ports Definition "),e("a",{class:"header-anchor",href:"#ports-definition","aria-label":'Permalink to "Ports Definition"'},"‚Äã")],-1)),t[6]||(t[6]=e("blockquote",null,[e("p",null,"If a parameter input port is not connected to a wire or element, or being intercepted, the corresponding information will not be changed.")],-1)),d(y,{imgAltPrefix:"Player Controller",connections:h(s),imgSrc:"/images/expand/others/GVPlayerControllerBlock.webp"},null,8,["connections"]),t[7]||(t[7]=u('<h2 id="synchronous-operations" tabindex="-1">Synchronous Operations <a class="header-anchor" href="#synchronous-operations" aria-label="Permalink to &quot;Synchronous Operations&quot;">‚Äã</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">üìù Note</p><p>If an input is a fraction, the highest(leftmost) bit of the voltages represents the sign, the radix point is between the 16th and 17th bit.</p></div><table tabindex="0"><thead><tr><th style="text-align:center;">Voltage</th><th style="text-align:center;">Information</th><th>Description</th><th style="text-align:center;">Right Input</th><th style="text-align:center;">Top Input</th><th style="text-align:center;">Left Input</th></tr></thead><tbody><tr><td style="text-align:center;">0 or<br>Others</td><td style="text-align:center;">None</td><td>Only if the voltage of the bottom port changes, the information will be changed.</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">Body Position</td><td>Inputs are fractions.</td><td style="text-align:center;">X</td><td style="text-align:center;">Y</td><td style="text-align:center;">Z</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">Body Rotation</td><td>Outputs are fractions in degrees.<br>Only the roll is effective because the game will automatically straighten the body.</td><td style="text-align:center;">Yaw</td><td style="text-align:center;">Pitch</td><td style="text-align:center;">Roll</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">Body Velocity</td><td>Inputs are fractions.</td><td style="text-align:center;">X</td><td style="text-align:center;">Y</td><td style="text-align:center;">Z</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">Relative Eye Rotation</td><td>Relative to the body. Outputs are fractions in degrees.<br>Only the pitch is effective because the game will automatically fix the yaw to 0</td><td style="text-align:center;">Yaw</td><td style="text-align:center;">Pitch</td><td style="text-align:center;">/</td></tr><tr><td style="text-align:center;">8</td><td style="text-align:center;">Spawn Position</td><td>Inputs are fractions.</td><td style="text-align:center;">X</td><td style="text-align:center;">Y</td><td style="text-align:center;">Z</td></tr><tr><td style="text-align:center;">16</td><td style="text-align:center;">Attribute 1</td><td>Inputs are fractions.</td><td style="text-align:center;">Health</td><td style="text-align:center;">Stamina</td><td style="text-align:center;">Sleep</td></tr><tr><td style="text-align:center;">17</td><td style="text-align:center;">Attribute 2</td><td>Inputs are fractions.</td><td style="text-align:center;">Food</td><td style="text-align:center;">Body Heat</td><td style="text-align:center;">Wetness</td></tr><tr><td style="text-align:center;">18</td><td style="text-align:center;">Attribute 3</td><td>Level is a fraction, others are integers.</td><td style="text-align:center;">Level</td><td style="text-align:center;">/</td><td style="text-align:center;">The Value of the Block in Hand</td></tr><tr><td style="text-align:center;">19</td><td style="text-align:center;">Attribute 4</td><td>Inputs are fractions.</td><td style="text-align:center;">Time Before Flu Recovered</td><td style="text-align:center;">Time Before Sickness Recovered</td><td style="text-align:center;">Time Before Fire Extinguished</td></tr></tbody></table>',3))])}}});export{O as __pageData,E as default};
