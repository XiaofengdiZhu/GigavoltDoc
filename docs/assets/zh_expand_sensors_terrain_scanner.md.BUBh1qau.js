import{E as e,a as n,b as a,c as r,I as t,d as h}from"./chunks/ElectricElement.BuvPvndk.js";import{d as x,o as p,c as g,j as c,a as i,I as s,k as _,a5 as d,D as m}from"./chunks/framework.CZYz2WcB.js";import"./chunks/locale.CB2Y0rC6.js";const y={id:"地形扫描仪",tabindex:"-1"},u=c("a",{class:"header-anchor",href:"#地形扫描仪","aria-label":'Permalink to "地形扫描仪 <Badge text="v2.0"/>"'},"​",-1),b=d('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>向扫描仪面对的面平行扫描方块，将结果保存到指定存储器，可指定起始距离和范围</p><div class="warning custom-block github-alert"><p class="custom-block-title">⚠ 注意</p><p>扫描成功将直接覆盖存储器原始数据！</p></div><h2 id="端口定义" tabindex="-1">端口定义 <a class="header-anchor" href="#端口定义" aria-label="Permalink to &quot;端口定义&quot;">​</a></h2>',4),f=d('<h2 id="方向说明" tabindex="-1">方向说明 <a class="header-anchor" href="#方向说明" aria-label="Permalink to &quot;方向说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">扫描仪面对方向</th><th style="text-align:center;">起始横向偏移正方向</th><th style="text-align:center;">起始纵向偏移正方向</th><th style="text-align:center;">横向扫描方向</th><th style="text-align:center;">纵向扫描方向</th></tr></thead><tbody><tr><td style="text-align:center;">Y 轴-上或下</td><td style="text-align:center;">X 轴正方向-北</td><td style="text-align:center;">Z 轴正方向-西</td><td style="text-align:center;">X 轴正方向-北</td><td style="text-align:center;">Z 轴正方向-西</td></tr><tr><td style="text-align:center;">X 轴-北或南</td><td style="text-align:center;">Z 轴正方向-西</td><td style="text-align:center;">Y 轴正方向-上</td><td style="text-align:center;">Z 轴正方向-西</td><td style="text-align:center;">Y 轴负方向-下</td></tr><tr><td style="text-align:center;">Z 轴-东或西</td><td style="text-align:center;">X 轴正方向-北</td><td style="text-align:center;">Y 轴正方向-上</td><td style="text-align:center;">X 轴正方向-北</td><td style="text-align:center;">Y 轴负方向-下</td></tr></tbody></table>',2),v=JSON.parse('{"title":"地形扫描仪","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/sensors/terrain_scanner.md","filePath":"zh/expand/sensors/terrain_scanner.md"}'),w={name:"zh/expand/sensors/terrain_scanner.md"},q=x({...w,setup(I){let l=[new e(n.Top,a.Input,r.BitWidth,[new t(1,16,"起始距离","每加 1，扫描起始位置距离扫描仪面向的方向加 1 格，最高位为 1 时向背面；如果为 0xFFFF，则不调整起始距离，扫描方式改为像 [地形射线探测器](terrain_raycast_detector) 那样，向面对方向不断扫描直到遇到非空气方块（可用于生成地图）"),new t(17,17,"是否存储方块特殊值","为 0 时只保存方块 ID，为 1 时方块 ID 和数据一并保存"),new t(18,32,"空","无作用")]),new e(n.Right,a.Input,r.BitWidth,[new t(1,16,"起始纵向偏移","每加 1，扫描起始位置纵向偏移 1 格，最高位为 1 时取反方向，正方向的定义另见下表"),new t(17,32,"起始横向偏移","每加 1，扫描起始位置横向偏移 1 格，最高位为 1 时取反方向，正方向的定义另见下表")]),new e(n.Bottom,a.Input,r.BitWidth,[new t(1,32,"启动","从0变为非0时启动扫描并将结果保存到指定 ID 的存储器")]),new e(n.Left,a.Input,r.BitWidth,[new t(1,16,"纵向扫描高度","每加 1，扫描的高度加 1 格，扫描方向的定义另见下表"),new t(17,32,"横向扫描宽度","每加 1，扫描的宽度加 1 格，扫描方向的定义另见下表")]),new e(n.In,a.Input,r.BitWidth,[new t(1,32,"存储器 ID","指定要保存到的存储器的 ID")])];return(B,k)=>{const o=m("Badge");return p(),g("div",{"data-pagefind-body":!0},[c("h1",y,[i("地形扫描仪 "),s(o,{text:"v2.0"}),i(),u]),b,s(h,{imgAltPrefix:"地形扫描仪",connections:_(l),imgSrc:"/images/expand/sensors/GVTerrainScannerBlock.webp"},null,8,["connections"]),f])}}});export{v as __pageData,q as default};
