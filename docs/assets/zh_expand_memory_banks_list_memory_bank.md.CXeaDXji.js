import{E as t,a as e,b as l,c as n,I as d,d as y}from"./chunks/ElectricElement.BuvPvndk.js";import{d as o,o as g,c as f,j as s,a as r,I as a,k as b,a5 as i,D as h}from"./chunks/framework.CZYz2WcB.js";import"./chunks/locale.CB2Y0rC6.js";const m={id:"一维存储器",tabindex:"-1"},p=s("a",{class:"header-anchor",href:"#一维存储器","aria-label":'Permalink to "一维存储器 <Badge text="v1.0" type="info"/>"'},"​",-1),_=i('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>和 <a href="./../../base/shift/memory_bank.html">存储器</a> 相似，但只能存储一行数据，但是有很多实用功能，无需初始化即可使用</p><p>保存到存档的形式是未经任何处理的二进制文件，可使用支持十六进制编辑的软件进行编辑<br> 导出的文件格式是<code>.GBLMB</code>，其本质是 <a href="https://support.pkware.com/pkzip/appnote" target="_blank" rel="noreferrer">ZIP</a> 压缩文件，解压后可使用支持十六进制编辑的软件进行编辑</p><blockquote><p>另有 <a href="./volatile_memory_banks.html#易失性一维存储器">易失版</a></p></blockquote><h2 id="端口定义" tabindex="-1">端口定义 <a class="header-anchor" href="#端口定义" aria-label="Permalink to &quot;端口定义&quot;">​</a></h2>',5),u=i('<h2 id="下端同步操作" tabindex="-1">下端同步操作 <a class="header-anchor" href="#下端同步操作" aria-label="Permalink to &quot;下端同步操作&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">电压</th><th style="text-align:center;">操作</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">无</td><td style="text-align:center;">异步读</td><td style="text-align:left;">下端无输入时，上端实时输出右索引位置的数据（超出范围时输出 0，下同）</td></tr><tr><td style="text-align:center;">0 或<br>未指定</td><td style="text-align:center;">无</td><td style="text-align:left;">下端输入 0 或以下未指定的电压时，均输出 0，且一旦下端接有元件或导线，该电路板将进入同步工作模式，该端输入变化时才会进行操作，输出不会随其他输入电压改变而立即发生改变</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">读取</td><td style="text-align:left;">读取右索引位置的数据输出到上端</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">写入</td><td style="text-align:left;">将后端输入数据覆写到左右索引范围内（含两个索引位置，左索引为 0 时只覆写到右索引，下同）</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">插入</td><td style="text-align:left;">将后端输入数据插入到左右索引范围内（在较小的索引位置插入较大索引减较小索引再加一的数量的后端输入数据）</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">剪切</td><td style="text-align:left;">读取右索引位置的数据输出到上端后删除</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">删除</td><td style="text-align:left;">将左右索引范围内数据删除</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">顺查</td><td style="text-align:left;">从左右索引中较小的索引开始，按顺序查找后端输入数据，最多查找到较大的索引，最后将找到的索引位置输出到上端（未找到则输出 0xFFFFFFFF；左右索引均为 0 时从头找到尾）</td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;">倒查</td><td style="text-align:left;">从左右索引中较大的索引开始，按倒序查找后端输入数据，最少查找到较小的索引，最后将找到的索引位置输出到上端（未找到则输出 0xFFFFFFFF；左右索引均为 0 时从尾找到头）</td></tr><tr><td style="text-align:center;">8</td><td style="text-align:center;">查删</td><td style="text-align:left;">将左右索引范围内等于后端输入数据的数据删除，上端输出删除的数据个数</td></tr><tr><td style="text-align:center;">9</td><td style="text-align:center;">查询数量</td><td style="text-align:left;">将左右索引范围内等于后端输入数据的数据数量输出到上端</td></tr><tr><td style="text-align:center;">10<br>(0xA)</td><td style="text-align:center;">复制粘贴</td><td style="text-align:left;">将右索引的数据复制粘贴到左索引位置(右索引位置数据为 0 时将粘贴 0，下同)</td></tr><tr><td style="text-align:center;">11<br>(0xB)</td><td style="text-align:center;">复制插入</td><td style="text-align:left;">将右索引的数据复制插入到左索引位置</td></tr><tr><td style="text-align:center;">12<br>(0xC)</td><td style="text-align:center;">反转</td><td style="text-align:left;">将左右索引范围内数据顺序反转</td></tr><tr><td style="text-align:center;">13<br>(0xD)</td><td style="text-align:center;">升序</td><td style="text-align:left;">将左右索引范围内数据从小到大重新排列</td></tr><tr><td style="text-align:center;">14<br>(0xE)</td><td style="text-align:center;">降序</td><td style="text-align:left;">将左右索引范围内数据从大到小重新排列</td></tr><tr><td style="text-align:center;">15<br>(0xF)</td><td style="text-align:center;">数据数量</td><td style="text-align:left;">在上端输出当前存储的数据数量（提示：设置过大索引的数据会导致结果膨胀）</td></tr><tr><td style="text-align:center;">16~31<br>(0x10~1F)</td><td style="text-align:center;">左批量二元计算器</td><td style="text-align:left;">对左右索引范围内所有数据分别进行二元数学运算，原本的数据作为运算的左值，后端输入数据作为运算的右值，下端输入从小到大对应的运算方式分别为加法、减法、乘法、除法、取余、等于、大于、大于等于、小于、小于等于、取大、取小、左移、右移、乘方、对数（左真右底）</td></tr><tr><td style="text-align:center;">32~47<br>(0x20~2F)</td><td style="text-align:center;">右批量二元计算器</td><td style="text-align:left;">和左批量计算器相似，只是原本的数据作为运算的右值，后端输入数据作为运算的左值</td></tr><tr><td style="text-align:center;">48~66<br>(0x30~42)</td><td style="text-align:center;">批量一元计算器</td><td style="text-align:left;">对左右索引范围内所有数据分别进行一元数学运算，原本的数据作为运算的输入，下端从小到大对应的运算方式分别为正弦、余弦、正切、余切、正割、余割、反正弦、反余弦、反正切、双曲正弦、双曲余弦、双曲正切、角度转弧度、弧度转角度、原码正负转换、补码正负转换、取反、加一、减一<br>输入和输出最高位为1时代表负数（原码模式），较高的第 17~31 位为整数部分，较低的第 1~16 位为小数部分</td></tr><tr><td style="text-align:center;">256<br>(0x100)</td><td style="text-align:center;">设置宽</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时显示的宽度，默认为 0</td></tr><tr><td style="text-align:center;">257<br>(0x101)</td><td style="text-align:center;">设置高</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时显示的高度，默认为 0</td></tr><tr><td style="text-align:center;">258<br>(0x102)</td><td style="text-align:center;">设置初始偏移</td><td style="text-align:left;">根据后端输入，设置被图片、地层显示器读取时，忽略开头多少个数据，默认为 0</td></tr><tr><td style="text-align:center;">272<br>(0x110)</td><td style="text-align:center;">获取宽</td><td style="text-align:left;">获取设置的宽，输出到上端</td></tr><tr><td style="text-align:center;">273<br>(0x111)</td><td style="text-align:center;">获取高</td><td style="text-align:left;">获取设置的高，输出到上端</td></tr><tr><td style="text-align:center;">274<br>(0x112)</td><td style="text-align:center;">获取初始偏移</td><td style="text-align:left;">获取设置的初始偏移，输出到上端</td></tr></tbody></table>',2),q=JSON.parse('{"title":"一维存储器","description":"","frontmatter":{},"headers":[],"relativePath":"zh/expand/memory_banks/list_memory_bank.md","filePath":"zh/expand/memory_banks/list_memory_bank.md"}'),k={name:"zh/expand/memory_banks/list_memory_bank.md"},C=o({...k,setup(F){let c=[new t(e.Top,l.Output,n.Hide,[new d(1,32,"输出数据/结果","")],!1,!0),new t(e.Right,l.Input,n.Hide,[new d(1,32,"右索引","")],!1,!0),new t(e.Bottom,l.Input,n.Hide,[new d(1,32,"同步操作，详见下表","")],!1,!0),new t(e.Left,l.Input,n.Hide,[new d(1,32,"左索引","")],!1,!0),new t(e.In,l.Input,n.Hide,[new d(1,32,"输入数据","")],!1,!0)];return(w,B)=>{const x=h("Badge");return g(),f("div",{"data-pagefind-body":!0},[s("h1",m,[r("一维存储器 "),a(x,{text:"v1.0",type:"info"}),r(),p]),_,a(y,{imgAltPrefix:"一维存储器",connections:b(c),imgSrc:"/images/expand/memory_banks/GVListMemoryBankBlock.webp"},null,8,["connections"]),u])}}});export{q as __pageData,C as default};
