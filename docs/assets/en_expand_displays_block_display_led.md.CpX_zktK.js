import{_ as d}from"./chunks/block_display_led_0.DudOBaWZ.js";import{E as o,a,b as i,c as n,I as e}from"./chunks/ElectricConnectionTable.BmTUByVO.js";import{E as f}from"./chunks/ElectricElement.BefNTKrd.js";import{U as m}from"./chunks/UintColorConverter.CcxVp72b.js";import{d as b,B as g,c as w,o as u,j as l,a3 as r,G as s,a as c,k as y}from"./chunks/framework.CM9Y3eBy.js";import"./chunks/locale.Exah1bWg.js";const k={id:"block-show-board",tabindex:"-1"},_={class:"details custom-block"},A=JSON.parse('{"title":"Block Show Board","description":"","frontmatter":{},"headers":[],"relativePath":"en/expand/displays/block_display_led.md","filePath":"en/expand/displays/block_display_led.md"}'),v={name:"en/expand/displays/block_display_led.md"},D=b({...v,setup(S){let h=[new o(a.Top,i.Input,n.StartAndEnd,[new e(1,16,"Scale Size","For each 1 increase of this, the scale size of the floating block increases by 1/8 times, with a maximum of 8191.875 times."),new e(17,32,"Y Offset","For each 1 increase of this, the position of the floating block moves up by 1/8 block. If the highest bit of this is 1, moving down instead.")]),new o(a.Right,i.Input,n.StartAndEnd,[new e(1,16,"X Offset","For each 1 increase of this, the position of the floating block moves north by 1/8 block. If the highest bit of this is 1, moving south instead."),new e(17,32,"Z Offset","For each 1 increase of this, the position of the floating block moves east by 1/8 block. If the highest bit of this is 1, moving west instead.")]),new o(a.Bottom,i.Input,n.StartAndEnd,[new e(1,8,"Yaw","Set the yaw angle of the floating text, in degree."),new e(9,16,"Pitch","Set the pitch angle of the floating text, in degree."),new e(17,24,"Roll","Set the roll angle of the floating text, in degree."),new e(25,25,"Yaw Sign","If this is 1, the yaw angle will be negative."),new e(26,26,"Pitch Sign","If this is 1, the pitch angle will be negative."),new e(27,27,"Roll Sign","If this is 1, the roll angle will be negative."),new e(28,28,"Empty","No effect."),new e(29,29,"Whether Retaining",`When this is 0, if other parameters change, the floating block will be changed immediately.  
 When this is 1, if other parameters change, a new floating block will be displayed with the new parameters, and the old ones will be retained until this changes to 0, or exit the world.`),new e(30,32,"Empty","No effect.")]),new o(a.Left,i.Input,n.BitWidth,[new e(1,32,"Color","Paint color on the floating block, in ABGR color mode.")]),new o(a.In,i.Input,n.BitWidth,[new e(1,32,"Block Value","Set the value of the block you want to display.")])];return(B,t)=>{const p=g("Badge");return u(),w("div",{"data-pagefind-body":!0},[l("h1",k,[t[0]||(t[0]=c("Block Show Board ")),s(p,{text:"v1.0",type:"info"}),t[1]||(t[1]=c()),t[2]||(t[2]=l("a",{class:"header-anchor",href:"#block-show-board","aria-label":'Permalink to "Block Show Board <Badge text="v1.0" type="info"/>"'},"​",-1))]),t[4]||(t[4]=r('<h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>For showing blocks, there are two types:</p><h2 id="simple-type" tabindex="-1">Simple Type <a class="header-anchor" href="#simple-type" aria-label="Permalink to &quot;Simple Type&quot;">​</a></h2><img alt="The Image of The Simple Block Show Board" src="'+d+'" class="center_image small"><p>Input the value of the block you want to display, and a floating 3D block will be displayed in front of the Simple Block Show Board. The other parameters:</p><ul><li><strong>Rotation</strong>：Decided by the facing direction of the Block Show Board and the<code>In Hand Rotation</code>property of the block.</li><li><strong>Scale Size</strong>：Decided by the<code>In Hand Scale</code>property of the block.</li><li><strong>Brightness</strong>：Decided by the environment brightness.</li><li><strong>Color</strong>：No change.</li></ul><blockquote><p>The final input is generated by performing a bitwise OR operation between the inputs from all ports.</p></blockquote><div class="tip custom-block github-alert"><p class="custom-block-title">💡 Tip</p><p>You can get block value through <a href="./../sensors/block_value_plate.html">Block Value Plate</a>, <a href="./../sensors/terrain_raycast_detector.html">Terrain Raycast Detector</a> etc.</p></div><h2 id="complex-type" tabindex="-1">Complex Type <a class="header-anchor" href="#complex-type" aria-label="Permalink to &quot;Complex Type&quot;">​</a></h2><p>You can control all parameters of the floating block. The Details are below.</p><h3 id="ports-definition" tabindex="-1">Ports Definition <a class="header-anchor" href="#ports-definition" aria-label="Permalink to &quot;Ports Definition&quot;">​</a></h3>',11)),s(f,{imgAltPrefix:"The Complex Block Show Board",connections:y(h),imgSrc:"/images/expand/displays/block_display_led_1.webp",titleLevel:4},null,8,["connections"]),t[5]||(t[5]=r('<div class="info custom-block github-alert"><p class="custom-block-title">💡 Tip</p><p>The offset ranges of each direction are all ±4095.875.</p></div><div class="tip custom-block github-alert"><p class="custom-block-title">📝 ABGR Color Mode</p><p>From high to low bits，every 8 bits represents the color&#39;s <span style="opacity:0.6;">Alpha chanel</span>、<span style="color:blue;">Blue chanel</span>、<span style="color:green;">Green chanel</span>、<span style="color:red;">Red chanel</span>. You can use the tool below to convert.</p></div>',2)),l("details",_,[t[3]||(t[3]=l("summary",null,"🛠️ Voltage Color Converter",-1)),s(m)])])}}});export{A as __pageData,D as default};
